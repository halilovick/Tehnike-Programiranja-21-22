// TP 2021/2022: ZadaÄ‡a 2, Zadatak 4
#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>

template <typename TipElementa>
bool Kriterij(std::vector<TipElementa> v1, std::vector<TipElementa> v2) {
  TipElementa suma1 = v1.at(0);
  TipElementa suma2 = v2.at(0);
  if (v1.size() > 0) {
    for (int i = 1; i < v1.size(); i++) {
      suma1 += v1.at(i);
    }
  }
  if (v2.size() > 0) {
    for (int i = 1; i < v2.size(); i++) {
      suma2 += v2.at(i);
    }
  }
  return suma1 > suma2;
}

template <typename Tip>
void SortirajPoSumiRedova(std::vector<std::vector<Tip>> &v) {
  std::sort(v.begin(), v.end(), Kriterij<Tip>);
}

int main() {
  std::cout
      << "Unesi elemente (* za kraj reda, * na pocetku reda za kraj unosa): "
      << std::endl;
  std::vector<std::vector<int>> v;
  int i = 0, j = 0;
  for (;;) {
    v.resize(i + 1);
    do {
      v.at(i).resize(j + 1);
      int broj;
      std::cin >> broj;
      v.at(i).at(j) = broj;
      j++;
    } while (std::cin);
    v.at(i).resize(j - 1);
    if (j == 1) {
      v.resize(i);
      break;
    }
    std::cin.clear();
    std::cin.ignore(10000, '\n');
    i++;
    j = 0;
  }
  SortirajPoSumiRedova(v);
  std::cout << "Matrica nakon sortiranja:" << std::endl;
  for (int i = 0; i < v.size(); i++) {
    for (int j = 0; j < v.at(i).size(); j++) {
      std::cout << v.at(i).at(j);
      if (j != v.at(i).size() - 1)
        std::cout << " ";
    }
    std::cout << std::endl;
  }
  return 0;
}
